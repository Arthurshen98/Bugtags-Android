apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    lintOptions {
        abortOnError false
    }
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.bugtag.networkapp"
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task appStart(type: Exec, dependsOn: 'installDebug') {
    commandLine android.adbExe, 'shell', 'am', 'start', '-n', 'com.bugtag.networkapp/.MainActivity'
}


import com.sun.tools.attach.VirtualMachine
import java.lang.management.ManagementFactory

class BaseTask extends DefaultTask {

    static String filePath;
    static String pid;

    static {
        filePath = (new File('/Users/changbinhe/Documents/git/bt/Bugtags-Agent/dist/rewrite-agent.jar')).canonicalPath;

        String nameOfRunningVm = ManagementFactory.getRuntimeMXBean().getName()
        int p = nameOfRunningVm.indexOf('@')
        pid = nameOfRunningVm.subSequence(0, p)
    }

    static String getJarPath() {
        return filePath;
    }

    static String getPid() {
        return pid;
    }

}

class BugtagsInstrumentTask extends BaseTask {

    static final String NAME = 'bugtagsInstumentTask'

    @TaskAction
    void run() {
        try {
            println(getJarPath())

            VirtualMachine vm = VirtualMachine.attach(getPid())
            vm.loadAgent(getJarPath(), "debug=1;network=1")
            vm.detach()
        }
        catch (Exception e) {
            e.printStackTrace()
        }
    }
}

class BugtagsDeinstrumentTask extends BaseTask {
    static final String NAME = 'bugtagsDeinstrumentTask'

    @TaskAction
    def run() {
        try {
            VirtualMachine vm = VirtualMachine.attach(getPid())
            vm.loadAgent(getJarPath(), "deinstrument=1")
            vm.detach()
        }
        catch (Exception e) {
            e.printStackTrace()
        }
    }
}

public class BugtagsPlugin implements Plugin<Project> {
    BugtagsInstrumentTask instrumentTask
    BugtagsDeinstrumentTask deinstrumentTask;

    @Override
    void apply(Project target) {
        instrumentTask = target.tasks.create(BugtagsInstrumentTask.NAME, BugtagsInstrumentTask.class)
        deinstrumentTask = target.tasks.create(BugtagsDeinstrumentTask.NAME, BugtagsDeinstrumentTask.class)

        target.configure(target) {
            if (it.hasProperty('android')) {
                tasks.whenTaskAdded { task ->
                    project.('android').applicationVariants.all { variant ->

                        def expectingTask = "dex${variant.name.capitalize()}".toString()
                        def expectingTask2 = "transformClassesWithDexFor${variant.name.capitalize()}".toString();

                        if (expectingTask.equals(task.name) || expectingTask2.equals(task.name)) {
                            task.dependsOn instrumentTask.name

                            task.finalizedBy deinstrumentTask
                        }
                    }
                }
            }
        }
    }
}

apply plugin: BugtagsPlugin

//apply plugin: 'com.bugtags.library.plugin'

//自动上传插件
//bugtags {
//    appKey "8f443d183b1d202a5b006faa4718e1a6"  //这里是你的 appKey
//    appSecret "9650f5388807226df23ba836fbacaaf6"    //这里是你的 appSecret，管理员在设置页可以查看
//
//    mappingUploadEnabled false
//
//    trackingNetworkEnabled true
//}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'

    compile project(':bugtags-lib')
    //compile 'com.bugtags.library-canary:bugtags-lib:1.2.4@aar'
    //compile 'com.android.support:support-v4:19.0.0'

    compile 'com.mcxiaoke.volley:library:1.0.19'

    compile 'com.squareup.okhttp:okhttp:1.6.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'

    compile 'com.squareup.retrofit2:retrofit:2.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'

    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.loopj.android:android-async-http:1.4.9'

    compile('org.apache.httpcomponents:httpmime:4.3.6') {
        exclude module: 'httpclient'
    }
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5'
    compile('org.apache.httpcomponents:httpcore:4.0')
}

